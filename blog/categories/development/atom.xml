<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Development | Michael Evans]]></title>
  <link href="http://michaelevans.org/blog/categories/development/atom.xml" rel="self"/>
  <link href="http://michaelevans.org/"/>
  <updated>2022-10-23T21:31:00-04:00</updated>
  <id>http://michaelevans.org/</id>
  <author>
    <name><![CDATA[Michael Evans]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Build Types with the Google Services Gradle Plugin]]></title>
    <link href="http://michaelevans.org/blog/2016/03/31/using-build-types-with-the-google-services-gradle-plugin/"/>
    <updated>2016-03-31T21:11:55-04:00</updated>
    <id>http://michaelevans.org/blog/2016/03/31/using-build-types-with-the-google-services-gradle-plugin</id>
    <content type="html"><![CDATA[<p>If you want to integrate your Android app with most of Google Play Services nowadays, you&rsquo;ll find that you are instructed to set up the <a href="https://developers.google.com/android/guides/google-services-plugin">Google Services Gradle plugin</a> to handle configuring dependencies. The plugin allows you to drop a JSON file into your project, and then the plugin will do a bunch of the configuration for your project, such as handling the API keys.</p>

<p>This is all well and good—unless you&rsquo;re like me (<a href="https://github.com/googlesamples/google-services/issues/54">and countless others</a>) and want to use a different configuration for your debug and release builds. This would be useful, as an example, if you use Google Play Services for GCM and would like to have development builds recieve pushes from non-production systems.</p>

<p>It seems that the plugin is configured in such a way that it supports build flavors, but it does not yet support build types. However, with a little Gradle magic, we can hack that support in.</p>

<!-- more -->


<p><strong>Disclaimer: This approach worked for me—but as with any hack, it is subject to break.</strong></p>

<p>So how can we go about doing this? We want to put the debug JSON file into the root of our app module during debug builds and use the release one for release builds. If you don&rsquo;t do that, or if you attempt to put it in <code>app/debug</code> and <code>app/release</code>, you&rsquo;ll get an error that says <code>File google-services.json is missing from module root folder. The Google Services Plugin cannot function without it</code>.</p>

<p>This error is thrown by a task named <code>process{VariantName}GoogleServices</code>. What we could do to solve this is swap the file in before that task is run! Using a little Groovy magic, I came up with this:</p>

<p>```groovy
android.applicationVariants.all { variant &ndash;></p>

<pre><code>def hackTask = task("hackGps${variant.name.capitalize()}") &lt;&lt; {
    copy {
        from rootProject.file("config/${variant.buildType.name}/google-services.json")
        into "${projectDir}"
    }
}
def googleTask = tasks.findByName("process${variant.name.capitalize()}GoogleServices")
googleTask.dependsOn hackTask
</code></pre>

<p>}
```</p>

<p>For each one of your variants, this code will create a new task &ndash; <code>hackGps{VariantName}</code>, which copies a <code>google-services.json</code> file from a <code>config</code> directory into the root of your app module. Then it finds the corresponding Google Services task, and hooks itself in to run right before that! Now when you assemble your application, the right <code>google-services.json</code> file will be in the right place, ready to be picked up by the plugin.</p>

<p><em>You might also want to .gitignore the <code>app/google-services.json</code> file, so that you don&rsquo;t keep committing the changed file to git</em></p>

<p>Hopefully Google will fix this issue in an upcoming release of the Google Services plugin, but until then &ndash; this technique should work!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changelog for N Support Libraries]]></title>
    <link href="http://michaelevans.org/blog/2016/03/09/changelog-for-n-support-libraries/"/>
    <updated>2016-03-09T19:38:46-05:00</updated>
    <id>http://michaelevans.org/blog/2016/03/09/changelog-for-n-support-libraries</id>
    <content type="html"><![CDATA[<p>Pssst! If you&rsquo;re an Android developer, you might not have heard yet&hellip;the <a href="http://android-developers.blogspot.com/2016/03/first-preview-of-android-n-developer.html">N Preview started today</a>! As part of the festivities, a new alpha version of the support libraries was released. There was no changelog that I could find, so I decided to make one. Here&rsquo;s what has changed (so far) in the public API of a few of these libraries:</p>

<!-- more -->


<h2>Support-V4:</h2>

<p><div><script src='https://gist.github.com/5d7c55382198640345dc.js?file=support-v4.diff'></script>
<noscript><pre><code>diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.app.FragmentController support-v4-24.0.0-alpha1_41849fd4/android.support.v4.app.FragmentController
--- support-v4-23.2.0_df13b086/android.support.v4.app.FragmentController	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.app.FragmentController	2016-03-09 19:28:24.000000000 -0500
@@ -11,0 +12 @@
+  public void restoreAllState(android.os.Parcelable, android.support.v4.app.FragmentManagerNonConfig);
@@ -12,0 +14 @@
+  public android.support.v4.app.FragmentManagerNonConfig retainNestedNonConfig();
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.app.FragmentManagerNonConfig support-v4-24.0.0-alpha1_41849fd4/android.support.v4.app.FragmentManagerNonConfig
--- support-v4-23.2.0_df13b086/android.support.v4.app.FragmentManagerNonConfig	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.app.FragmentManagerNonConfig	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,2 @@
+public class android.support.v4.app.FragmentManagerNonConfig {
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.app.FragmentTransaction support-v4-24.0.0-alpha1_41849fd4/android.support.v4.app.FragmentTransaction
--- support-v4-23.2.0_df13b086/android.support.v4.app.FragmentTransaction	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.app.FragmentTransaction	2016-03-09 19:28:24.000000000 -0500
@@ -34,0 +35,2 @@
+  public abstract void commitNow();
+  public abstract void commitNowAllowingStateLoss();
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.content.ContextCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.content.ContextCompat
--- support-v4-23.2.0_df13b086/android.support.v4.content.ContextCompat	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.content.ContextCompat	2016-03-09 19:28:24.000000000 -0500
@@ -13,0 +14,2 @@
+  public static android.content.Context createDeviceEncryptedStorageContext(android.content.Context);
+  public static boolean isDeviceEncryptedStorage(android.content.Context);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.content.res.TypedArrayUtils support-v4-24.0.0-alpha1_41849fd4/android.support.v4.content.res.TypedArrayUtils
--- support-v4-23.2.0_df13b086/android.support.v4.content.res.TypedArrayUtils	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.content.res.TypedArrayUtils	2016-03-09 19:28:24.000000000 -0500
@@ -8,0 +9 @@
+  public static int getAttr(android.content.Context, int, int);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.media.session.IMediaSession support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.IMediaSession
--- support-v4-23.2.0_df13b086/android.support.v4.media.session.IMediaSession	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.IMediaSession	2016-03-09 19:28:24.000000000 -0500
@@ -33,0 +34,4 @@
+  public abstract void prepare() throws android.os.RemoteException;
+  public abstract void prepareFromMediaId(java.lang.String, android.os.Bundle) throws android.os.RemoteException;
+  public abstract void prepareFromSearch(java.lang.String, android.os.Bundle) throws android.os.RemoteException;
+  public abstract void prepareFromUri(android.net.Uri, android.os.Bundle) throws android.os.RemoteException;
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.media.session.MediaControllerCompat$TransportControls support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.MediaControllerCompat$TransportControls
--- support-v4-23.2.0_df13b086/android.support.v4.media.session.MediaControllerCompat$TransportControls	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.MediaControllerCompat$TransportControls	2016-03-09 19:28:24.000000000 -0500
@@ -1,0 +2,4 @@
+  public abstract void prepare();
+  public abstract void prepareFromMediaId(java.lang.String, android.os.Bundle);
+  public abstract void prepareFromSearch(java.lang.String, android.os.Bundle);
+  public abstract void prepareFromUri(android.net.Uri, android.os.Bundle);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.media.session.MediaSessionCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.MediaSessionCompat
--- support-v4-23.2.0_df13b086/android.support.v4.media.session.MediaSessionCompat	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.MediaSessionCompat	2016-03-09 19:28:24.000000000 -0500
@@ -4,3 +3,0 @@
-  public static final java.lang.String ACTION_PLAY_FROM_URI;
-  public static final java.lang.String ACTION_ARGUMENT_URI;
-  public static final java.lang.String ACTION_ARGUMENT_EXTRAS;
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.media.session.MediaSessionCompat$Callback support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.MediaSessionCompat$Callback
--- support-v4-23.2.0_df13b086/android.support.v4.media.session.MediaSessionCompat$Callback	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.MediaSessionCompat$Callback	2016-03-09 19:28:24.000000000 -0500
@@ -4,0 +5,4 @@
+  public void onPrepare();
+  public void onPrepareFromMediaId(java.lang.String, android.os.Bundle);
+  public void onPrepareFromSearch(java.lang.String, android.os.Bundle);
+  public void onPrepareFromUri(android.net.Uri, android.os.Bundle);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.media.session.PlaybackStateCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.PlaybackStateCompat
--- support-v4-23.2.0_df13b086/android.support.v4.media.session.PlaybackStateCompat	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.media.session.PlaybackStateCompat	2016-03-09 19:28:24.000000000 -0500
@@ -15,0 +16,4 @@
+  public static final long ACTION_PREPARE;
+  public static final long ACTION_PREPARE_FROM_MEDIA_ID;
+  public static final long ACTION_PREPARE_FROM_SEARCH;
+  public static final long ACTION_PREPARE_FROM_URI;
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.net.TrafficStatsCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.net.TrafficStatsCompat
--- support-v4-23.2.0_df13b086/android.support.v4.net.TrafficStatsCompat	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.net.TrafficStatsCompat	2016-03-09 19:28:24.000000000 -0500
@@ -8,0 +9,2 @@
+  public static void tagDatagramSocket(java.net.DatagramSocket) throws java.net.SocketException;
+  public static void untagDatagramSocket(java.net.DatagramSocket) throws java.net.SocketException;
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.os.BuildCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.os.BuildCompat
--- support-v4-23.2.0_df13b086/android.support.v4.os.BuildCompat	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.os.BuildCompat	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,3 @@
+public class android.support.v4.os.BuildCompat {
+  public static boolean isAtLeastN();
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.os.UserManagerCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.os.UserManagerCompat
--- support-v4-23.2.0_df13b086/android.support.v4.os.UserManagerCompat	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.os.UserManagerCompat	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,6 @@
+public class android.support.v4.os.UserManagerCompat {
+  public android.support.v4.os.UserManagerCompat();
+  public static boolean isUserRunningAndLocked(android.content.Context);
+  public static boolean isUserRunningAndUnlocked(android.content.Context);
+  public static boolean isUserUnlocked(android.content.Context);
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.AsyncLayoutInflater support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.AsyncLayoutInflater
--- support-v4-23.2.0_df13b086/android.support.v4.view.AsyncLayoutInflater	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.AsyncLayoutInflater	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,4 @@
+public final class android.support.v4.view.AsyncLayoutInflater {
+  public android.support.v4.view.AsyncLayoutInflater(android.content.Context);
+  public void inflate(int, android.view.ViewGroup, android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener);
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener
--- support-v4-23.2.0_df13b086/android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,3 @@
+public interface android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener {
+  public abstract void onInflateFinished(android.view.View, int, android.view.ViewGroup);
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.KeyEventCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.KeyEventCompat
--- support-v4-23.2.0_df13b086/android.support.v4.view.KeyEventCompat	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.KeyEventCompat	2016-03-09 19:28:24.000000000 -0500
@@ -10,0 +11 @@
+  public static boolean isCtrlPressed(android.view.KeyEvent);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.MotionEventCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.MotionEventCompat
--- support-v4-23.2.0_df13b086/android.support.v4.view.MotionEventCompat	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.MotionEventCompat	2016-03-09 19:28:24.000000000 -0500
@@ -36,0 +37,2 @@
+  public static final int AXIS_RELATIVE_X;
+  public static final int AXIS_RELATIVE_Y;
@@ -52,0 +55 @@
+  public static final int BUTTON_PRIMARY;
@@ -60,0 +64 @@
+  public static boolean isFromSource(android.view.MotionEvent, int);
@@ -62,0 +67 @@
+  public static int getButtonState(android.view.MotionEvent);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.PointerIconCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.PointerIconCompat
--- support-v4-23.2.0_df13b086/android.support.v4.view.PointerIconCompat	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.PointerIconCompat	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,29 @@
+public final class android.support.v4.view.PointerIconCompat {
+  public static final int STYLE_NULL;
+  public static final int STYLE_ARROW;
+  public static final int STYLE_CONTEXT_MENU;
+  public static final int STYLE_HAND;
+  public static final int STYLE_HELP;
+  public static final int STYLE_WAIT;
+  public static final int STYLE_CELL;
+  public static final int STYLE_CROSSHAIR;
+  public static final int STYLE_TEXT;
+  public static final int STYLE_VERTICAL_TEXT;
+  public static final int STYLE_ALIAS;
+  public static final int STYLE_COPY;
+  public static final int STYLE_NO_DROP;
+  public static final int STYLE_ALL_SCROLL;
+  public static final int STYLE_HORIZONTAL_DOUBLE_ARROW;
+  public static final int STYLE_VERTICAL_DOUBLE_ARROW;
+  public static final int STYLE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW;
+  public static final int STYLE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW;
+  public static final int STYLE_ZOOM_IN;
+  public static final int STYLE_ZOOM_OUT;
+  public static final int STYLE_GRAB;
+  public static final int STYLE_GRABBING;
+  public static final int STYLE_DEFAULT;
+  public java.lang.Object getPointerIcon();
+  public static android.support.v4.view.PointerIconCompat getSystemIcon(android.content.Context, int);
+  public static android.support.v4.view.PointerIconCompat createCustomIcon(android.graphics.Bitmap, float, float);
+  public static android.support.v4.view.PointerIconCompat loadCustomIcon(android.content.res.Resources, int);
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.ViewCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.ViewCompat
--- support-v4-23.2.0_df13b086/android.support.v4.view.ViewCompat	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.ViewCompat	2016-03-09 19:28:24.000000000 -0500
@@ -1 +1 @@
-public final class android.support.v4.view.ViewCompat {
+public class android.support.v4.view.ViewCompat {
@@ -141,0 +142,4 @@
+  public static void setPointerCapture(android.view.View);
+  public static boolean hasPointerCapture(android.view.View);
+  public static void releasePointerCapture(android.view.View);
+  public static void setPointerIcon(android.view.View, android.support.v4.view.PointerIconCompat);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.ViewCompat$FocusDirection support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.ViewCompat$FocusDirection
--- support-v4-23.2.0_df13b086/android.support.v4.view.ViewCompat$FocusDirection	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.ViewCompat$FocusDirection	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,2 @@
+public interface android.support.v4.view.ViewCompat$FocusDirection extends java.lang.annotation.Annotation {
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.ViewCompat$FocusRealDirection support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.ViewCompat$FocusRealDirection
--- support-v4-23.2.0_df13b086/android.support.v4.view.ViewCompat$FocusRealDirection	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.ViewCompat$FocusRealDirection	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,2 @@
+public interface android.support.v4.view.ViewCompat$FocusRealDirection extends java.lang.annotation.Annotation {
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.ViewCompat$FocusRelativeDirection support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.ViewCompat$FocusRelativeDirection
--- support-v4-23.2.0_df13b086/android.support.v4.view.ViewCompat$FocusRelativeDirection	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.ViewCompat$FocusRelativeDirection	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,2 @@
+public interface android.support.v4.view.ViewCompat$FocusRelativeDirection extends java.lang.annotation.Annotation {
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.view.accessibility.AccessibilityNodeInfoCompat support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
--- support-v4-23.2.0_df13b086/android.support.v4.view.accessibility.AccessibilityNodeInfoCompat	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.view.accessibility.AccessibilityNodeInfoCompat	2016-03-09 19:28:24.000000000 -0500
@@ -148,0 +149,2 @@
+  public java.lang.CharSequence getRoleDescription();
+  public void setRoleDescription(java.lang.CharSequence);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.widget.ExploreByTouchHelper support-v4-24.0.0-alpha1_41849fd4/android.support.v4.widget.ExploreByTouchHelper
--- support-v4-23.2.0_df13b086/android.support.v4.widget.ExploreByTouchHelper	2016-03-09 19:28:24.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.widget.ExploreByTouchHelper	2016-03-09 19:28:24.000000000 -0500
@@ -6,4 +6,9 @@
-  public boolean dispatchHoverEvent(android.view.MotionEvent);
-  public boolean sendEventForVirtualView(int, int);
-  public void invalidateRoot();
-  public void invalidateVirtualView(int);
+  public final boolean dispatchHoverEvent(android.view.MotionEvent);
+  public final boolean dispatchKeyEvent(android.view.KeyEvent);
+  public final void onFocusChanged(boolean, int, android.graphics.Rect);
+  public final int getAccessibilityFocusedVirtualViewId();
+  public final int getKeyboardFocusedVirtualViewId();
+  public final boolean sendEventForVirtualView(int, int);
+  public final void invalidateRoot();
+  public final void invalidateVirtualView(int);
+  public final void invalidateVirtualView(int, int);
@@ -11 +16,4 @@
-  public void onPopulateNodeForHost(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat);
+  public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent);
+  public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat);
+  public final boolean requestKeyboardFocusForVirtualView(int);
+  public final boolean clearKeyboardFocusForVirtualView(int);
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.widget.FocusStrategy$BoundsAdapter&lt;T&gt; support-v4-24.0.0-alpha1_41849fd4/android.support.v4.widget.FocusStrategy$BoundsAdapter&lt;T&gt;
--- support-v4-23.2.0_df13b086/android.support.v4.widget.FocusStrategy$BoundsAdapter&lt;T&gt;	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.widget.FocusStrategy$BoundsAdapter&lt;T&gt;	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,3 @@
+public interface android.support.v4.widget.FocusStrategy$BoundsAdapter&lt;T&gt; {
+  public abstract void obtainBounds(T, android.graphics.Rect);
+}
diff -U 0 -N support-v4-23.2.0_df13b086/android.support.v4.widget.FocusStrategy$CollectionAdapter&lt;T, support-v4-24.0.0-alpha1_41849fd4/android.support.v4.widget.FocusStrategy$CollectionAdapter&lt;T,
--- support-v4-23.2.0_df13b086/android.support.v4.widget.FocusStrategy$CollectionAdapter&lt;T,	1969-12-31 19:00:00.000000000 -0500
+++ support-v4-24.0.0-alpha1_41849fd4/android.support.v4.widget.FocusStrategy$CollectionAdapter&lt;T,	2016-03-09 19:28:24.000000000 -0500
@@ -0,0 +1,4 @@
+public interface android.support.v4.widget.FocusStrategy$CollectionAdapter&lt;T, V&gt; {
+  public abstract V get(T, int);
+  public abstract int size(T);
+}</code></pre></noscript></div>
</p>

<h2>AppCompat:</h2>

<p><div><script src='https://gist.github.com/5d7c55382198640345dc.js?file=appcompat.diff'></script>
<noscript><pre><code>diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState	1969-12-31 19:00:00.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState	2016-03-09 19:28:22.000000000 -0500
@@ -0,0 +1,5 @@
+public final class android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState {
+  public boolean qwertyMode;
+  public boolean hasPanelItems();
+  public void clearMenuPresenters();
+}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.WindowCallbackWrapper appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.WindowCallbackWrapper
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.WindowCallbackWrapper	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.WindowCallbackWrapper	2016-03-09 19:28:22.000000000 -0500
@@ -25,0 +26 @@
+  public void onProvideKeyboardShortcuts(java.util.List&lt;android.view.KeyboardShortcutGroup&gt;, android.view.Menu);
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.ActionMenuItemView$PopupCallback appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.ActionMenuItemView$PopupCallback
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.ActionMenuItemView$PopupCallback	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.ActionMenuItemView$PopupCallback	2016-03-09 19:28:22.000000000 -0500
@@ -3 +3 @@
-  public abstract android.support.v7.widget.ListPopupWindow getPopup();
+  public abstract android.support.v7.view.menu.ShowableListMenu getPopup();
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.CascadingMenuPopup$HorizPosition appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.CascadingMenuPopup$HorizPosition
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.CascadingMenuPopup$HorizPosition	1969-12-31 19:00:00.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.CascadingMenuPopup$HorizPosition	2016-03-09 19:28:22.000000000 -0500
@@ -0,0 +1,2 @@
+public interface android.support.v7.view.menu.CascadingMenuPopup$HorizPosition extends java.lang.annotation.Annotation {
+}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.ListMenuItemView appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.ListMenuItemView
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.ListMenuItemView	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.ListMenuItemView	2016-03-09 19:28:22.000000000 -0500
@@ -2 +1,0 @@
-  public android.support.v7.view.menu.ListMenuItemView(android.content.Context, android.util.AttributeSet, int);
@@ -3,0 +3 @@
+  public android.support.v7.view.menu.ListMenuItemView(android.content.Context, android.util.AttributeSet, int);
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.MenuAdapter appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.MenuAdapter
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.MenuAdapter	1969-12-31 19:00:00.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.MenuAdapter	2016-03-09 19:28:22.000000000 -0500
@@ -0,0 +1,12 @@
+public class android.support.v7.view.menu.MenuAdapter extends android.widget.BaseAdapter {
+  public android.support.v7.view.menu.MenuAdapter(android.support.v7.view.menu.MenuBuilder, android.view.LayoutInflater, boolean);
+  public boolean getForceShowIcon();
+  public void setForceShowIcon(boolean);
+  public int getCount();
+  public android.support.v7.view.menu.MenuBuilder getAdapterMenu();
+  public android.support.v7.view.menu.MenuItemImpl getItem(int);
+  public long getItemId(int);
+  public android.view.View getView(int, android.view.View, android.view.ViewGroup);
+  public void notifyDataSetChanged();
+  public java.lang.Object getItem(int);
+}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.MenuBuilder appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.MenuBuilder
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.MenuBuilder	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.MenuBuilder	2016-03-09 19:28:22.000000000 -0500
@@ -60,0 +61 @@
+  public void setOptionalIconsVisible(boolean);
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.MenuPopupHelper appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.MenuPopupHelper
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.MenuPopupHelper	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.MenuPopupHelper	2016-03-09 19:28:22.000000000 -0500
@@ -1 +1 @@
-public class android.support.v7.view.menu.MenuPopupHelper implements android.widget.AdapterView$OnItemClickListener,android.view.View$OnKeyListener,android.view.ViewTreeObserver$OnGlobalLayoutListener,android.widget.PopupWindow$OnDismissListener,android.support.v7.view.menu.MenuPresenter {
+public class android.support.v7.view.menu.MenuPopupHelper implements android.support.v7.view.menu.MenuHelper {
@@ -5,0 +6 @@
+  public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener);
@@ -11 +12,2 @@
-  public android.support.v7.widget.ListPopupWindow getPopup();
+  public void show(int, int);
+  public android.support.v7.view.menu.MenuPopup getPopup();
@@ -12,0 +15 @@
+  public boolean tryShow(int, int);
@@ -14 +16,0 @@
-  public void onDismiss();
@@ -16,15 +18 @@
-  public void onItemClick(android.widget.AdapterView&lt;?&gt;, android.view.View, int, long);
-  public boolean onKey(android.view.View, int, android.view.KeyEvent);
-  public void onGlobalLayout();
-  public void initForMenu(android.content.Context, android.support.v7.view.menu.MenuBuilder);
-  public android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup);
-  public void updateMenuView(boolean);
-  public void setCallback(android.support.v7.view.menu.MenuPresenter$Callback);
-  public boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder);
-  public void onCloseMenu(android.support.v7.view.menu.MenuBuilder, boolean);
-  public boolean flagActionItems();
-  public boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder, android.support.v7.view.menu.MenuItemImpl);
-  public boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder, android.support.v7.view.menu.MenuItemImpl);
-  public int getId();
-  public android.os.Parcelable onSaveInstanceState();
-  public void onRestoreInstanceState(android.os.Parcelable);
+  public void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback);
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.ShowableListMenu appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.ShowableListMenu
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.view.menu.ShowableListMenu	1969-12-31 19:00:00.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.view.menu.ShowableListMenu	2016-03-09 19:28:22.000000000 -0500
@@ -0,0 +1,6 @@
+public interface android.support.v7.view.menu.ShowableListMenu {
+  public abstract void show();
+  public abstract void dismiss();
+  public abstract boolean isShowing();
+  public abstract android.widget.ListView getListView();
+}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.AppCompatSeekBar appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.AppCompatSeekBar
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.AppCompatSeekBar	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.AppCompatSeekBar	2016-03-09 19:28:22.000000000 -0500
@@ -4,0 +5 @@
+  public void jumpDrawablesToCurrentState();
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.ForwardingListener appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.ForwardingListener
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.ForwardingListener	1969-12-31 19:00:00.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.ForwardingListener	2016-03-09 19:28:22.000000000 -0500
@@ -0,0 +1,5 @@
+public abstract class android.support.v7.widget.ForwardingListener implements android.view.View$OnTouchListener {
+  public android.support.v7.widget.ForwardingListener(android.view.View);
+  public abstract android.support.v7.view.menu.ShowableListMenu getPopup();
+  public boolean onTouch(android.view.View, android.view.MotionEvent);
+}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.ListPopupWindow appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.ListPopupWindow
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.ListPopupWindow	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.ListPopupWindow	2016-03-09 19:28:22.000000000 -0500
@@ -1 +1 @@
-public class android.support.v7.widget.ListPopupWindow {
+public class android.support.v7.widget.ListPopupWindow implements android.support.v7.view.menu.ShowableListMenu {
@@ -33,0 +34 @@
+  public void setEpicenterBounds(android.graphics.Rect);
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.ListPopupWindow$ForwardingListener appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.ListPopupWindow$ForwardingListener
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.ListPopupWindow$ForwardingListener	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.ListPopupWindow$ForwardingListener	1969-12-31 19:00:00.000000000 -0500
@@ -1,5 +0,0 @@
-public abstract class android.support.v7.widget.ListPopupWindow$ForwardingListener implements android.view.View$OnTouchListener {
-  public android.support.v7.widget.ListPopupWindow$ForwardingListener(android.view.View);
-  public abstract android.support.v7.widget.ListPopupWindow getPopup();
-  public boolean onTouch(android.view.View, android.view.MotionEvent);
-}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.MenuItemHoverListener appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.MenuItemHoverListener
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.MenuItemHoverListener	1969-12-31 19:00:00.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.MenuItemHoverListener	2016-03-09 19:28:22.000000000 -0500
@@ -0,0 +1,4 @@
+public interface android.support.v7.widget.MenuItemHoverListener {
+  public abstract void onItemHoverExit(android.support.v7.view.menu.MenuBuilder, android.view.MenuItem);
+  public abstract void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder, android.view.MenuItem);
+}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.MenuPopupWindow appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.MenuPopupWindow
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.MenuPopupWindow	1969-12-31 19:00:00.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.MenuPopupWindow	2016-03-09 19:28:22.000000000 -0500
@@ -0,0 +1,9 @@
+public class android.support.v7.widget.MenuPopupWindow extends android.support.v7.widget.ListPopupWindow implements android.support.v7.widget.MenuItemHoverListener {
+  public android.support.v7.widget.MenuPopupWindow(android.content.Context, android.util.AttributeSet, int, int);
+  public void setEnterTransition(java.lang.Object);
+  public void setExitTransition(java.lang.Object);
+  public void setHoverListener(android.support.v7.widget.MenuItemHoverListener);
+  public void setTouchModal(boolean);
+  public void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder, android.view.MenuItem);
+  public void onItemHoverExit(android.support.v7.view.menu.MenuBuilder, android.view.MenuItem);
+}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.MenuPopupWindow$MenuDropDownListView appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.MenuPopupWindow$MenuDropDownListView
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.MenuPopupWindow$MenuDropDownListView	1969-12-31 19:00:00.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.MenuPopupWindow$MenuDropDownListView	2016-03-09 19:28:22.000000000 -0500
@@ -0,0 +1,12 @@
+public class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView extends android.support.v7.widget.DropDownListView {
+  public android.support.v7.widget.MenuPopupWindow$MenuDropDownListView(android.content.Context, boolean);
+  public void setHoverListener(android.support.v7.widget.MenuItemHoverListener);
+  public void clearSelection();
+  public boolean onKeyDown(int, android.view.KeyEvent);
+  public boolean onHoverEvent(android.view.MotionEvent);
+  public boolean hasFocus();
+  public boolean isFocused();
+  public boolean hasWindowFocus();
+  public boolean isInTouchMode();
+  public boolean onForwardedEvent(android.view.MotionEvent, int);
+}
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.PopupMenu appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.PopupMenu
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.PopupMenu	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.PopupMenu	2016-03-09 19:28:22.000000000 -0500
@@ -1 +1 @@
-public class android.support.v7.widget.PopupMenu implements android.support.v7.view.menu.MenuBuilder$Callback,android.support.v7.view.menu.MenuPresenter$Callback {
+public class android.support.v7.widget.PopupMenu {
@@ -15,5 +14,0 @@
-  public boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder, android.view.MenuItem);
-  public void onCloseMenu(android.support.v7.view.menu.MenuBuilder, boolean);
-  public boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder);
-  public void onCloseSubMenu(android.support.v7.view.menu.SubMenuBuilder);
-  public void onMenuModeChange(android.support.v7.view.menu.MenuBuilder);
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.TintTypedArray appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.TintTypedArray
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.TintTypedArray	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.TintTypedArray	2016-03-09 19:28:22.000000000 -0500
@@ -3,0 +4 @@
+  public static android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context, int, int[]);
diff -U 0 -N appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.Toolbar appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.Toolbar
--- appcompat-v7-23.2.0_ff0f8a1a/android.support.v7.widget.Toolbar	2016-03-09 19:28:22.000000000 -0500
+++ appcompat-v7-24.0.0-alpha1_4f276de6/android.support.v7.widget.Toolbar	2016-03-09 19:28:22.000000000 -0500
@@ -6,0 +7,9 @@
+  public void setTitleMargin(int, int, int, int);
+  public int getTitleMarginStart();
+  public void setTitleMarginStart(int);
+  public int getTitleMarginTop();
+  public void setTitleMarginTop(int);
+  public int getTitleMarginEnd();
+  public void setTitleMarginEnd(int);
+  public int getTitleMarginBottom();
+  public void setTitleMarginBottom(int);</code></pre></noscript></div>
</p>

<h2>Design:</h2>

<p><div><script src='https://gist.github.com/5d7c55382198640345dc.js?file=design.diff'></script>
<noscript><pre><code>diff -U 0 -N design-23.2.0_c138856a/android.support.design.widget.FloatingActionButton design-24.0.0-alpha1_c951a944/android.support.design.widget.FloatingActionButton
--- design-23.2.0_c138856a/android.support.design.widget.FloatingActionButton	2016-03-09 19:28:22.000000000 -0500
+++ design-24.0.0-alpha1_c951a944/android.support.design.widget.FloatingActionButton	2016-03-09 19:28:22.000000000 -0500
@@ -21,0 +22 @@
+  public boolean onTouchEvent(android.view.MotionEvent);</code></pre></noscript></div>
</p>

<p>There are no API changes in RecyclerView nor my personal <a href="http://michaelevans.org/blog/2015/07/14/improving-your-code-with-android-support-annotations/">favorite support library</a> &ndash; Support Annotations.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio Tips and Tricks]]></title>
    <link href="http://michaelevans.org/blog/2016/01/06/android-studio-tips-and-tricks/"/>
    <updated>2016-01-06T20:25:53-05:00</updated>
    <id>http://michaelevans.org/blog/2016/01/06/android-studio-tips-and-tricks</id>
    <content type="html"><![CDATA[<p>I recently attended Google&rsquo;s <a href="https://androiddevsummit.withgoogle.com/">Android Dev Summit</a> where the Tools team presented a talk entitled <a href="https://www.youtube.com/watch?v=Y2GC6P5hPeA">Android Studio For Experts</a>. The room was packed for the 90 minute session, where a lot of great Android Studio tips were shared. This gave me the idea of showing off some of my favorite Android Studio tips!</p>

<!-- more -->


<h2>Language Injection</h2>

<p>Ever needed to type a JSON String? Perhaps you&rsquo;ve used one as a text fixture for one of your GSON deserializers and know that it&rsquo;s a huge pain to manage all those backslashes. Fortunately, IntelliJ has a feature called <em>Language Injection</em>, which allows you to edit the JSON fragment in its own editor, and then IntelliJ will properly inject that fragment into your code as an escaped String.</p>

<p><img class="center" src="/images/2016/01/06/fragment_intention.png" width="300" height="100" title="Intention Action" ></p>

<p>Inject Language/Reference is an intention action<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>, so you can start it by using <kbd>⌥</kbd>+<kbd>Return</kbd>, or <kbd>⌘</kbd>+<kbd>⇧</kbd>+<kbd>A</kbd> and searching for it.</p>

<p><img class="center" src="/images/2016/01/06/fragment_editor.png" width="300" height="300" title="Editing JSON" ></p>

<h2><a href="https://xkcd.com/1171/">Check RegExp</a></h2>

<p>This is pretty similar to the last tip, but if you select the language of the fragment as &ldquo;RegExp&rdquo;, you&rsquo;ll get a handy regular expression tester!</p>

<p><img class="center" src="/images/2016/01/06/reg_exp_1.png" width="300" height="150" title="Editing Regex" ></p>

<p><img class="center" src="/images/2016/01/06/reg_exp_2.png" width="300" height="200" title="Valid Regex" ></p>

<p><img class="center" src="/images/2016/01/06/reg_exp_3.png" width="300" height="200" title="Invalid Regex" ></p>

<h2>Smart(er) Completion</h2>

<p>Now I’m pretty sure most of you have used IntelliJ’s code completion features. Press <kbd>⌥</kbd>+<kbd>Space</kbd>, and IntelliJ/Android Studio lists options to complete the names of classes, methods, fields, and keywords within the visibility scope. But have you ever noticed that the suggestions seem to be based off the characters you&rsquo;ve typed, rather than the actual <em>types</em> that are expected in the scope of the caret? Something like this:</p>

<p><img class="center" src="/images/2016/01/06/basic_autocomplete.png" width="300" height="200" title="Autocomplete" ></p>

<p>Well if you use <em>Type Completion</em> (by pressing <kbd>⌥</kbd>+<kbd>⇧</kbd>+<kbd>Space</kbd>), you will see a list of suggestions containing only those types that are applicable to the current context. In the example below, you&rsquo;ll only get types that return a <code>Reader</code>, which is the type that the <code>BufferedReader</code>&rsquo;s constructor expects:</p>

<p><img class="center" src="/images/2016/01/06/smart_autocomplete.png" width="300" height="200" title="Better Autocomplete" ></p>

<p>What&rsquo;s even cooler is that you can press it an additional time, and IntelliJ will do a deeper scan (looking at static method calls, chained expressions, etc.) to find more options for you:</p>

<p><img class="center" src="/images/2016/01/06/chained_autocomplete.png" width="300" height="200" title="Chained Autocomplete" ></p>

<h2>Discovering Your Own Tips and Tricks</h2>

<p>Another really cool feature is the <em>Productivity Guide</em>. It shows you usage statistics for a lot of IntelliJ&rsquo;s features, such as how many keystokes you have saved or possible bugs you&rsquo;ve avoided by using the various shortcuts. It&rsquo;s also very helpful for discovering features you might not have known about; you can scroll through the list of unused features to see what you&rsquo;re missing out on! To find the productivity guide, go to <code>Help -&gt; Productivity Guide</code>.</p>

<p><img class="center" src="/images/2016/01/06/productivity_guide.png" width="700" height="500" title="Invalid Regex" ></p>

<h2>Bonus Round &ndash; IntelliJ 15 Only</h2>

<p>Did you know IntelliJ has <a href="https://www.jetbrains.com/idea/help/testing-restful-web-services.html">its own REST client</a>? Super handy for testing out API calls without something like <a href="https://luckymarmot.com/paw">Paw</a> or <a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en">Postman</a>.</p>

<p>Have any other favorite tips or tricks? Let me know!</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p><a href="https://www.jetbrains.com/idea/help/intention-actions.html">Intention Actions</a> are those suggestions in the little popup menus that allow you to quick-fix things like classes that haven&rsquo;t been imported, etc.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing Intents with Espresso Intents]]></title>
    <link href="http://michaelevans.org/blog/2015/09/15/testing-intents-with-espresso-intents/"/>
    <updated>2015-09-15T22:03:57-04:00</updated>
    <id>http://michaelevans.org/blog/2015/09/15/testing-intents-with-espresso-intents</id>
    <content type="html"><![CDATA[<p>A few weeks ago, I wrote <a href="http://michaelevans.org/blog/2015/08/03/using-espresso-for-easy-ui-testing/">a basic introduction</a> on how to use Espresso to test the UI of an Android application. However, when I went to write instrumentation tests for <a href="https://github.com/MichaelEvans/Aftermath">Aftermath</a>, I ran into trouble testing things that exist outside my application&rsquo;s process. For example, what do you do when your app needs to use the Android Intent system to call upon the dialer or the browser, or pick a contact with the contact picker? What about testing a share action? Because these apps run outside your application itself, you can&rsquo;t use Espresso to interact with them. So how can you test your app&rsquo;s behavior? You can either use Espresso-Intents or UI Automator (but that&rsquo;s another show).</p>

<!-- more -->


<h2>The Setup</h2>

<p>Setting up Espresso-Intents is dead simple if you&rsquo;re already using Espresso. Make sure you&rsquo;re already depending on Espresso, the rules, and the runner and then add the dependency:</p>

<p><code>
androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.1'
</code></p>

<h2>The Tests</h2>

<p>Let&rsquo;s imagine that you had an application with a button to launch the contact picker, which would then show the contact <code>Uri</code> of the selected contact in a text view. Not only would this be hard to test because you are leaving your own application&rsquo;s process, but you don&rsquo;t even know if your test can rely on any contacts even existing on the test device (not to mention not knowing which app is registered to handle the contact-picking Intent itself). Fortunately we can use Espresso-Intents to stub out the response for activities that are launched with <code>startActivityForResult</code>.</p>

<p>Here&rsquo;s what that might look like:</p>

<p>```java
@Before public void stubContactIntent() {</p>

<pre><code>Intent intent = new Intent();
intent.setData(Uri.parse(TEST_URI));
ActivityResult result = new ActivityResult(Activity.RESULT_OK, intent);

intending(allOf(
    hasData(ContactsContract.CommonDataKinds.Phone.CONTENT_URI),
    hasAction(Intent.ACTION_PICK))
).respondWith(result);
</code></pre>

<p>}</p>

<p>@Test public void pickContact_viewIsSet() {</p>

<pre><code>//Check to make sure the Uri field is empty
onView(withId(R.id.phone_number)).check(matches(withText("")));

//Start contact picker
onView(withId(R.id.pick_contact)).perform(click());

//Verify that Uri was set properly.
onView(withId(R.id.phone_number)).check(matches(withText(TEST_URI)));
</code></pre>

<p>}
```</p>

<p>Using the <code>intending</code> API, we can respond with our mock <code>ActivityResult</code> data. If you&rsquo;ve used <a href="http://mockito.org/">Mockito</a> before, this stubbing will look very familiar to the <code>when</code>/<code>respondWith</code> methods. In this example, we&rsquo;re going to stub any Intents for the <code>ACTION_PICK</code> Intent with the <code>CONTENT_URI</code> data set to return a particular hard-coded Uri.</p>

<p>So this is great &mdash; our test no longer depends on any particular contact picker app, or any contacts even being present on the test device. But what do we do if we want to verify that a particular outgoing intent is launched with some given extras or data?</p>

<p>Let&rsquo;s say our sample app had an input field that would take a phone number, with a button to start the dialer to call that number. (Yes, I do realize that this application would likely not receive any venture capital funding).</p>

<p>All we have to do is use the <code>intended</code> API, which is most similar to Mockito&rsquo;s <code>verify</code> method. A sample of this might look like the following:</p>

<p>```java
@Test public void typeNumber_ValidInput_InitiatesCall() {</p>

<pre><code>onView(withId(R.id.number_input)).perform(typeText(VALID_PHONE_NUMBER), closeSoftKeyboard());
onView(withId(R.id.dial_button)).perform(click());

intended(allOf(hasAction(Intent.ACTION_DIAL), hasData(INTENT_DATA_PHONE_NUMBER)));
</code></pre>

<p>}
```</p>

<p>In this case, we&rsquo;re just going to verify that the intended Intent had the right action and the right data that we&rsquo;d expect to hand off to the dialer.</p>

<p>And you&rsquo;ll notice that the Espresso-Intents package includes handy Hamcrest matchers that you can use for things like Strings on the different parts of the Intent.</p>

<p>Now go forth and test those inter-app component interactions!</p>

<p>The sample code for this blog post can be found <a href="https://github.com/MichaelEvans/Espresso-Samples/tree/master/espresso-intents-sample">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Droidcon NYC 2015: @AnnotationProcessors("ByExample")]]></title>
    <link href="http://michaelevans.org/blog/2015/09/09/droidcon-nyc-2015-at-annotationprocessors-byexample/"/>
    <updated>2015-09-09T16:30:48-04:00</updated>
    <id>http://michaelevans.org/blog/2015/09/09/droidcon-nyc-2015-at-annotationprocessors-byexample</id>
    <content type="html"><![CDATA[<p>Here are slides and the video for my talk from Droidcon NYC 2015 on writing your own Annotation Processor:</p>

<p><iframe width="640" height="510" src="http://www.youtube.com/embed/dBUAqPs0TB0 " frameborder="0" webkitAllowFullScreen mozallowfullscreen allowfullscreen></iframe></p>

<p><script async="true" class="speakerdeck-embed" data-id="95e696d902d845dcb5079e0691eb5f3f" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"> </script></p>
]]></content>
  </entry>
  
</feed>
